"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MemberConfigStrategy = void 0;
var http_wrapper_1 = __importDefault(require("../../../utils/http-wrapper"));
var config_strategy_1 = __importDefault(require("./config-strategy"));
var helpers_1 = __importDefault(require("../../../helpers"));
var config_1 = __importDefault(require("../../../config"));
var MemberConfigStrategy = /** @class */ (function (_super) {
    __extends(MemberConfigStrategy, _super);
    function MemberConfigStrategy(context) {
        var _this = _super.call(this) || this;
        _this.context = context;
        _this.context.authenticateUser();
        _this.options = {
            hostname: config_1.default.host,
            headers: { Authorization: "Bearer " + _this.context.userToken }
        };
        return _this;
    }
    MemberConfigStrategy.prototype.setValue = function (name, value) {
        var _this = this;
        var flags = this.context.getParsedFlags();
        if (flags.leave) {
            var projectName_1 = value || this.context.mdbConfig.getValue('projectName');
            this.validate(projectName_1, 'projectName');
            return helpers_1.default.createTextPrompt('Confirm leaving project by typing its name:', 'Project name must not be empty.')
                .then(function (name) { return name === projectName_1 ? _this.leaveProject(projectName_1) : Promise.reject({ message: 'The names do not match.' }); })
                .then(function () { return "You have been successfully removed from " + projectName_1 + " project members."; });
        }
        else if (flags.list) {
            var projectName = value || this.context.mdbConfig.getValue('projectName');
            return this.getMembers(projectName);
        }
        this.validate(value, value.includes('@') ? 'email' : 'username');
        this.validate(flags.role, 'role');
        return this.addMember(value, flags.role)
            .then(function () { return value + " has been successfully added as a project member."; });
    };
    MemberConfigStrategy.prototype.unsetValue = function (name, value) {
        this.validate(value, value.includes('@') ? 'email' : 'username');
        return this.removeMember(value)
            .then(function () { return value + " has been successfully removed from the project."; });
    };
    MemberConfigStrategy.prototype.validate = function (value, valueType) {
        switch (valueType) {
            case 'email':
                if (!/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(value))
                    throw new Error('Provided email is invalid.');
                break;
            case 'projectName':
                if (!/^[a-z0-9_-]+$/.test(value)) {
                    throw new Error('Provided project name is invalid.');
                }
                break;
            case 'role':
                if (!config_1.default.memberRoles.includes(value)) {
                    throw new Error("Provided role is invalid. Allowed values: " + config_1.default.memberRoles.join(','));
                }
                break;
            case 'username':
                if (!/^[^()!|&*]+$/.test(value)) {
                    throw new Error('Provided username is invalid.');
                }
                break;
        }
    };
    MemberConfigStrategy.prototype.addMember = function (username, role) {
        return __awaiter(this, void 0, void 0, function () {
            var http;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.options.path = "/project/" + this.context.mdbConfig.getValue('projectName') + "/member";
                        this.options.data = JSON.stringify({ username: username, role: role });
                        this.options.headers['Content-Length'] = Buffer.byteLength(this.options.data);
                        this.options.headers['Content-Type'] = 'application/json';
                        http = new http_wrapper_1.default();
                        return [4 /*yield*/, http.post(this.options)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    MemberConfigStrategy.prototype.removeMember = function (username) {
        return __awaiter(this, void 0, void 0, function () {
            var http;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.options.path = "/project/" + this.context.mdbConfig.getValue('projectName') + "/member/" + username;
                        http = new http_wrapper_1.default();
                        return [4 /*yield*/, http.delete(this.options)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    MemberConfigStrategy.prototype.leaveProject = function (projectName) {
        return __awaiter(this, void 0, void 0, function () {
            var http;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.options.path = "/project/" + projectName + "/member/leave";
                        http = new http_wrapper_1.default();
                        return [4 /*yield*/, http.delete(this.options)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    MemberConfigStrategy.prototype.getMembers = function (projectName) {
        return __awaiter(this, void 0, void 0, function () {
            var http, result, members;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.options.path = "/project/members?projectName=" + projectName;
                        http = new http_wrapper_1.default();
                        return [4 /*yield*/, http.get(this.options)];
                    case 1:
                        result = _a.sent();
                        members = JSON.parse(result.body).map(function (m) { return ({ Username: m.user.userNicename, Role: m.role.name }); });
                        return [2 /*return*/, members];
                }
            });
        });
    };
    return MemberConfigStrategy;
}(config_strategy_1.default));
exports.MemberConfigStrategy = MemberConfigStrategy;
